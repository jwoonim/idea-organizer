name: CI/CD Actions
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        env:
          ENV: production
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          EMAIL_VERIFICATION_URL: ${{ secrets.EMAIL_VERIFICATION_URL }}
          RESET_PASSWORD_URL: ${{ secrets.RESET_PASSWORD_URL }}
          SOCIAL_SIGN_UP_PASSWORD_KEY: ${{ secrets.SOCIAL_SIGN_UP_PASSWORD_KEY }}
          GMAIL_ACCOUNT: ${{ secrets.GMAIL_ACCOUNT }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          OAUTH_REFRESH_TOKEN: ${{ secrets.OAUTH_REFRESH_TOKEN }}
          GOOGLE_CLOUD_STORAGE_BUCKET: ${{ secrets.GOOGLE_CLOUD_STORAGE_BUCKET }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          VERSION: ${{ secrets.VERSION }}
        run: |
          docker-compose build
          docker-compose push 

      - name: Update Dockerrun.aws.json
        run: echo "`jq '.containerDefinitions[0].image = "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ secrets.VERSION }}"' Dockerrun.aws.json`" > Dockerrun.aws.json

      - name: Create Google Cloud Storage JSON file
        run: |
          jq -n \
            '{
              "type": "service_account",
              "project_id": "idea-organizer-303412",
              "private_key_id": "${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ID }}",
              "private_key": "${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY }}",
              "client_email": "${{ secrets.GOOGLE_CLOUD_CLIENT_EMAIL }}",
              "client_id": "${{ secrets.GOOGLE_CLOUD_CLIENT_ID }}",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_x509_cert_url": "${{ secrets.GOOGLE_CLOUD_CERT_URL }}"
            }' \
          > ./app/idea-organizer-storage.json

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
        
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: idea-organizer
          environment_name: Ideaorganizer-env-1
          version_label: ${{ secrets.VERSION }}
          region: us-east-2
          deployment_package: deploy.zip